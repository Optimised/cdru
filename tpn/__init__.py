__author__ = 'yupeng'

# This is a wrapper for the tpn class
# generated by generateDS.py from
# the TPN xsd file.

# A few modification has to be made to the original

# 1. The xs:IDREF element in the input xsd
# should be replaced by xs:ID before generateDS runs

# 2. the gds_format_double function should be
# replaced by the following one to output
# infinity in the correct format

# def gds_format_double(self, input_data, input_name=''):
#     if math.isinf(input_data):
#         if input_data > 0:
#             return 'INF'
#         else:
#             return '-INF'
#     return '%e' % input_data

# 3. All namespace_='t:' in the export functions in tpn_autogen should be replaced by
# namespace_=''.

# 4. All namespacedef_='xmlns:t="http://mers.csail.mit.edu/tpn"' in the export functions in tpn_autogen
# should be replaced by namespacedef_='', except for the one for tpns.

from tpn import tpn_autogen

# The only function remaining is parse
# It will return a
class Tpn(object):
    @staticmethod
    def parseTPN(inFilename):
        tpns = tpn_autogen.parse(inFilename,silence=True)
        if len(tpns.get_tpn()) > 1:
            raise Exception("Only one tpn per file supported (for now)")
        obj = tpns.get_tpn()[0]
        return obj

    @staticmethod
    def writeTPN(tpn, outFilename):
        f = open(outFilename, 'w')
        f.write("""<?xml version="1.0" encoding="UTF-8"?>\r""")
        tpn.export(f,0)
        f.close()
